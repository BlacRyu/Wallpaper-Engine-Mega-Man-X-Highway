{
	"camera" : 
	{
		"center" : "0.000 0.000 0.000",
		"eye" : "0.000 0.000 1.000",
		"up" : "0.000 1.000 0.000"
	},
	"general" : 
	{
		"ambientcolor" : "0.300 0.300 0.300",
		"bloom" : false,
		"bloomstrength" : 2.0,
		"bloomthreshold" : 0.64999997615814209,
		"camerafade" : true,
		"cameraparallax" : false,
		"cameraparallaxamount" : 0.5,
		"cameraparallaxdelay" : 0.10000000149011612,
		"cameraparallaxmouseinfluence" : 0.0,
		"camerapreview" : true,
		"camerashake" : false,
		"camerashakeamplitude" : 0.5,
		"camerashakeroughness" : 1.0,
		"camerashakespeed" : 3.0,
		"clearcolor" : "0.529 0.529 0.529",
		"clearenabled" : true,
		"farz" : 10000.0,
		"fov" : 50.0,
		"nearz" : 0.0099999997764825821,
		"orthogonalprojection" : 
		{
			"height" : 256,
			"width" : 512
		},
		"skylightcolor" : "0.300 0.300 0.300"
	},
	"objects" : 
	[
		{
			"angles" : "0.000 0.000 0.000",
			"id" : 319,
			"locktransforms" : true,
			"maxtime" : 5.0,
			"mintime" : 1.0,
			"muteineditor" : false,
			"name" : "Enable Volume Controls",
			"origin" : "0.000 0.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"playbackmode" : "single",
			"scale" : "1.000 1.000 1.000",
			"sound" : [],
			"startsilent" : true,
			"volume" : 0.0
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 223,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : true,
			"name" : "Time of Day script",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "0.000 0.000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n\nconst SECONDS_TO_MINUTES = 1 / 60;\n\nfunction clamp(val, min, max) {return Math.min(max, Math.max(val, min))}\n\n/** Whether the lamps in the foreground should be rendered or not. */\nlet foreground_lamps = true;\n/** Length of the day in minutes. */\nlet day_length = 5;\n/** The currently visible background layer .*/\nlet activeBG = undefined;\n/** The currently visible foreground layer. */\nlet activeFG = undefined;\n/** The currently visible foreground lamps layer. */\nlet activeLamps = undefined;\n/** The 'sun height' (1-12) value from the previous frame. */\nlet prevSunHeight = 0;\n/** The manually selected hour when using Manual mode. */\nlet selectedHour = 1;\n\n// How the wallpaper should calculate the current time of day.\nconst TOD = {\n\tENABLED   : 0,\n\tDISABLED  : 1,\n\tLOCALTIME : 2\n}; Object.freeze(TOD);\nlet timeOfDayMode = TOD.ENABLED;\n\nlet timeOfDay = 0;\n\n/** Register assets for publishing */\nfor (let i = 1; i <= 12; ++i) {\n\tengine.registerAsset(`models/BG${i}.json`);\n\tengine.registerAsset(`models/FG${i}.json`);\n\tengine.registerAsset(`models/FGLamps${i}.json`);\n}\n\n/** Linearly interpolates between two values based on the third value */\nfunction lerp(a, b, t) { return a + (b-a)*t; }\n\n\n\n\nexport function init() {\n\t// Precache background and foreground layers\n\tfor (let i = 1; i <= 12; ++i) {\n\t\tloadBG(i).visible = false;\n\t\tloadFG(i).visible = false;\n\t\tloadLamps(i).visible = false;\n\t}\n}\n\n\n\nexport function update() {\n\tlet sunHeight = getSunHeight();\n\tif (sunHeight != prevSunHeight)\n\t{\n\t\tif (activeBG)\n\t\t\tactiveBG.visible = false;\n\t\tif (activeFG)\n\t\t\tactiveFG.visible = false;\n\t\tif (activeLamps)\n\t\t\tactiveLamps.visible = false;\n\n\t\tactiveBG = thisScene.getLayer(`BG${sunHeight}`) || loadBG(sunHeight);\n\t\tthisScene.sortLayer(activeBG, thisScene.getLayerIndex(thisLayer) + 1);\n\n\t\tactiveFG = thisScene.getLayer(`FG${sunHeight}`) || loadFG(sunHeight);\n\t\tthisScene.sortLayer(activeFG, thisScene.getLayerIndex(activeBG) + 1);\n\n\t\tactiveLamps = thisScene.getLayer(`FGLamps${sunHeight}`) || loadLamps(sunHeight);\n\t\tthisScene.sortLayer(activeLamps, thisScene.getLayerIndex(\"Pixel step (512x256 White) (Unused)\") - 1);\n\n\t\tactiveBG.visible = true;\n\t\tactiveFG.visible = true;\n\t\tactiveLamps.visible = foreground_lamps;\n\t}\n\t\n\tprevSunHeight = sunHeight;\n}\n\n\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.day_length != undefined)\n\t\tday_length = userProperties.day_length;\n\tif (userProperties.time_of_day != undefined)\n\t\ttimeOfDayMode = userProperties.time_of_day;\n\tif (userProperties.foreground_lamps != undefined)\n\t\tforeground_lamps = userProperties.foreground_lamps;\n\tif (activeLamps)\n\t\tactiveLamps.visible = foreground_lamps;\n\tif (userProperties.hour !== undefined)\n\t\tselectedHour = userProperties.hour;\n}\n\n\n\n/**\n * Returns a number between 1-12, where 1 means the sun is completely down, and 12 means it is day time.\n */\nfunction getSunHeight() {\n\tswitch (parseInt(timeOfDayMode)) {\n\tcase TOD.ENABLED:\n\tdefault:\n\t\t//console.log(\"enabled\");\n\t\ttimeOfDay += engine.frametime * SECONDS_TO_MINUTES / Math.max(day_length, 0.5);\n\t\ttimeOfDay %= 1;\n\t\tbreak;\n\tcase TOD.DISABLED:\n\t\t//console.log(\"disabled\");\n\t\treturn clamp(selectedHour, 1, 12);\n\t\tbreak;\n\tcase TOD.LOCALTIME:\n\t\t//console.log(\"clock\");\n\t\ttimeOfDay = engine.timeOfDay;\n\t\tbreak;\n\t}\n\tlet hour = Math.abs((timeOfDay - 0.5) * 24);\n\tif (hour < 5)\n\t\treturn 12;\n\telse if (hour > 8)\n\t\treturn 1;\n\telse\n\t\treturn Math.floor(lerp(12, 1, (hour - 5) * 0.3333));\n}\n\n\n\nfunction loadBG(sunHeight) {\n\treturn thisScene.createLayer({\n\t\tname: `BG${sunHeight}`,\n\t\timage: `models/BG${sunHeight}.json`,\n\t\torigin: `256 128 0`,\n\t\tsize: `512.000 256.000`,\n\t\teffects: \n\t\t[\n\t\t\t{\n\t\t\t\t\"file\" : \"effects/scroll/effect.json\",\n\t\t\t\t\"passes\" : \n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"constantshadervalues\" : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"speedx\" : \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"user\" : \"bg_speed\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"speedy\" : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"visible\" : true\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"file\" : \"effects/Perspective_Mask/effect.json\",\n\t\t\t\t\"passes\" : \n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"constantshadervalues\" : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"scale\" : \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"script\" : \"'use strict';\\n\\n/**\\n * @param {Object} userProperties\\n */\\nexport function applyUserProperties(userProperties) {\\n\\tif (userProperties.perspective !== undefined)\\n\\t\\tthisObject.scale = userProperties.perspective * 1.0;\\n}\\n\",\n\t\t\t\t\t\t\t\t\"value\" : 1\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"textures\" : [ null, \"BGDepth\" ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t});\n}\n\n\n\nfunction loadFG(sunHeight) {\n\treturn thisScene.createLayer({\n\t\tname: `FG${sunHeight}`,\n\t\timage: `models/FG${sunHeight}.json`,\n\t\torigin: `256 128 0`,\n\t\tsize: `512.000 256.000`,\n\t\teffects: \n\t\t[\n\t\t\t{\n\t\t\t\t\"file\" : \"effects/scroll/effect.json\",\n\t\t\t\t\"passes\" : \n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"constantshadervalues\" : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"speedx\" : \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"user\" : \"fg_speed\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"speedy\" : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t{\n\t\t\t\t\"file\" : \"effects/Perspective_Mask/effect.json\",\n\t\t\t\t\"passes\" : \n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"constantshadervalues\" : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"scale\" : \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"script\" : \"'use strict';\\n\\n/**\\n * @param {Object} userProperties\\n */\\nexport function applyUserProperties(userProperties) {\\n\\tif (userProperties.perspective !== undefined)\\n\\t\\tthisObject.scale = userProperties.perspective * 3.0;\\n}\\n\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"textures\" : [ null, \"FGDepth\" ]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t});\n}\n\n\n\nfunction loadLamps(sunHeight) {\n\treturn thisScene.createLayer({\n\t\tname: `FGLamps${sunHeight}`,\n\t\timage: `models/FGLamps${sunHeight}.json`,\n\t\torigin: `256 128 0`,\n\t\tsize: `512.000 256.000`,\n\t\teffects: \n\t\t[\n\t\t\t{\n\t\t\t\t\"file\" : \"effects/scroll/effect.json\",\n\t\t\t\t\"passes\" : \n\t\t\t\t[\n\t\t\t\t\t{\n\t\t\t\t\t\t\"constantshadervalues\" : \n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"repeat\" : \"1 1\",\n\t\t\t\t\t\t\t\"speedx\" : \n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"user\" : \"fg_speed\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"speedy\" : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t]\n\t});\n}",
				"value" : false
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 201,
			"image" : "models/util/solidlayer.json",
			"ledsource" : false,
			"locktransforms" : true,
			"name" : "Music script",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "0.000 0.000",
			"solid" : true,
			"visible" : 
			{
				"script" : "'use strict';\n\n/** Which song the wallpaper is set to play. */\nlet currentMusic = `none`;\n\n/** Contains the sound layers which are currently playing music. */\nlet musicLayers = [];\n\n// /** The delay before we start playing the looping portion of the intro stage music. */\n// const introDelay = 1.432;\n\n// /** The delay before we start playing the looping portion of the credits music. */\n// const castingsDelay = 15.467;\n\n/** How much time is left before we start playing the looping clip. */\n// let timeTillLoop = 0;\n\n/** Allows us to delay starting the loop track by 1 frame since it seems to begin early. */\n// let startLoopNextFrame = false;\n\n\n// Register the sound files so that they get published with the wallpaper.\nengine.registerAsset(`sounds/Intro Stage Intro.mp3`);\nengine.registerAsset(`sounds/Intro Stage Loop.mp3`);\nengine.registerAsset(`sounds/Castings Intro.mp3`);\nengine.registerAsset(`sounds/Castings Loop.mp3`);\n\n\n\n/**\n * @param {Object} changedUserProperties - only includes user properties that were recently changed!\n */\nexport function applyUserProperties(changedUserProperties) {\n\tif (changedUserProperties.music !== undefined && currentMusic !== changedUserProperties.music) {\n\t\tcurrentMusic = changedUserProperties.music;\n\n\t\tmusicLayers.forEach(\n\t\t\tfunction(musicLayer, index, array) {\n\t\t\t\tmusicLayer.stop();\n\t\t\t\tthisScene.destroyLayer(musicLayer);\n\t\t\t}\n\t\t);\n\t\tmusicLayers.splice(0, musicLayers.length);\n\n\t\tswitch (changedUserProperties.music) {\n\t\t\tcase `none`:\n\t\t\tdefault:\n\t\t\t\tbreak;\n\n\t\t\tcase `intro`:\n\t\t\t\t// musicLayers.push(\n\t\t\t\t// \tthisScene.createLayer( {\n\t\t\t\t// \t\tname : \"Intro Stage Intro.mp3\",\n\t\t\t\t// \t\tplaybackmode : \"single\",\n\t\t\t\t// \t\tsound : [ \"sounds/Intro Stage Intro.mp3\" ],\n\t\t\t\t// \t\tstartsilent : false,\n\t\t\t\t// \t\tvolume : 0.67\n\t\t\t\t// \t} )\n\t\t\t\t// );\n\t\t\t\tmusicLayers.push(\n\t\t\t\t\tthisScene.createLayer( {\n\t\t\t\t\t\tname : \"Intro Stage Loop.mp3\",\n\t\t\t\t\t\tplaybackmode : \"loop\",\n\t\t\t\t\t\tsound : [ \"sounds/Intro Stage Loop.mp3\" ],\n\t\t\t\t\t\tstartsilent : false,\n\t\t\t\t\t\tvolume : 0.67\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tbreak;\n\n\t\t\tcase `credits`:\n\t\t\t\t// musicLayers.push(\n\t\t\t\t// \tthisScene.createLayer( {\n\t\t\t\t// \t\tname : \"Castings Intro.mp3\",\n\t\t\t\t// \t\tplaybackmode : \"single\",\n\t\t\t\t// \t\tsound : [ \"sounds/Castings Intro.mp3\" ],\n\t\t\t\t// \t\tstartsilent : false,\n\t\t\t\t// \t\tvolume : 0.67\n\t\t\t\t// \t} )\n\t\t\t\t// );\n\t\t\t\tmusicLayers.push(\n\t\t\t\t\tthisScene.createLayer( {\n\t\t\t\t\t\tname : \"Castings Loop.mp3\",\n\t\t\t\t\t\tplaybackmode : \"loop\",\n\t\t\t\t\t\tsound : [ \"sounds/Castings Loop.mp3\" ],\n\t\t\t\t\t\tstartsilent : false,\n\t\t\t\t\t\tvolume : 0.67\n\t\t\t\t\t} )\n\t\t\t\t);\n\t\t\t\tbreak;\n\t\t}\n\t}\n}\n\n\n\n\n\n// export function update() {\n\n// \tlet musicIsPlaying = false;\n// \tmusicLayers.forEach(\n// \t\tfunction(musicLayer, index, array) {\n// \t\t\tif (musicLayer.isPlaying())\n// \t\t\t\tmusicIsPlaying = true;\n// \t\t}\n// \t);\n\n// \tif (!musicIsPlaying && timeTillLoop <= 0 && currentMusic !== `none`) {\n// \t\t// console.log(`intro finished`);\n// \t\ttimeTillLoop = .001;\n// \t}\n\n// \tif (timeTillLoop > 0) {\n// \t\ttimeTillLoop -= engine.frametime;\n// \t\tif (timeTillLoop <= 0 && !musicIsPlaying) {\n// \t\t\t// console.log(`loop starting`);\n// \t\t\tswitch (currentMusic) {\n// \t\t\t\tcase `none`:\n// \t\t\t\tdefault:\n// \t\t\t\t\tbreak;\n\n// \t\t\t\tcase `intro`:\n// \t\t\t\t\tmusicLayers.push(\n// \t\t\t\t\t\tthisScene.createLayer( {\n// \t\t\t\t\t\t\tname : \"Intro Stage Loop.mp3\",\n// \t\t\t\t\t\t\tplaybackmode : \"loop\",\n// \t\t\t\t\t\t\tsound : [ \"sounds/Intro Stage Loop.mp3\" ],\n// \t\t\t\t\t\t\tstartsilent : false,\n// \t\t\t\t\t\t\tvolume : 0.67\n// \t\t\t\t\t\t} )\n// \t\t\t\t\t);\n\t\t\t\t\t\n// \t\t\t\t\tbreak;\n\n// \t\t\t\tcase `credits`:\n// \t\t\t\t\tmusicLayers.push(\n// \t\t\t\t\t\tthisScene.createLayer( {\n// \t\t\t\t\t\t\tname : \"Castings Loop.mp3\",\n// \t\t\t\t\t\t\tplaybackmode : \"loop\",\n// \t\t\t\t\t\t\tsound : [ \"sounds/Castings Loop.mp3\" ],\n// \t\t\t\t\t\t\tstartsilent : false,\n// \t\t\t\t\t\t\tvolume : 0.67\n// \t\t\t\t\t\t} )\n// \t\t\t\t\t);\n// \t\t\t\t\tbreak;\n// \t\t\t}\n// \t\t}\n// \t}\n// }\n",
				"value" : false
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"id" : 104,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "BG Container (Composition) (Unused)",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "512.000 256.000",
			"solid" : true,
			"visible" : false
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 25,
			"image" : "models/MMX1BodyRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX1BodyRun (Armor Script)",
			"origin" : 
			{
				"script" : "'use strict';\n\nlet currentHelmet = `none`;\nlet currentArmor = `none`;\nlet currentArms = `none`;\nlet currentBoots = `none`;\nlet hideAll = false;\n\nlet allHelmets = [];\nlet allArmors = [];\nlet allArms = [];\nlet allBoots = [];\n\nlet allLayers = [];\n\n\n\nexport function init() {\n\tallHelmets = [\n\t\tthisScene.getLayer(\"MMX1HelmetRun\"),\n\t\tthisScene.getLayer(\"MMX2HelmetRun\"),\n\t\tthisScene.getLayer(\"MMX3HelmetRun\")\n\t];\n\tallArmors = [\n\t\tthisScene.getLayer(\"MMX1ArmorRun\"),\n\t\tthisScene.getLayer(\"MMX2ArmorRun\"),\n\t\tthisScene.getLayer(\"MMX3ArmorRun\")\n\t];\n\tallArms = [\n\t\tthisScene.getLayer(\"MMX1ArmsRun\"),\n\t\tthisScene.getLayer(\"MMX2ArmsRun\"),\n\t\tthisScene.getLayer(\"MMX3ArmsRun\")\n\t];\n\tallBoots = [\n\t\tthisScene.getLayer(\"MMX1BootsRun\"),\n\t\tthisScene.getLayer(\"MMX2BootsRun\"),\n\t\tthisScene.getLayer(\"MMX3BootsRun\")\n\t];\n\t\n\tallLayers = [thisLayer].concat(allHelmets, allArmors, allArms, allBoots);\n}\n\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.helmet !== undefined) {\n\t\tcurrentHelmet = userProperties.helmet;\n\t}\n\tif (userProperties.armor !== undefined) {\n\t\tcurrentArmor = userProperties.armor;\n\t}\n\tif (userProperties.arms !== undefined) {\n\t\tcurrentArms = userProperties.arms;\n\t}\n\tif (userProperties.boots !== undefined) {\n\t\tcurrentBoots = userProperties.boots;\n\t}\n\tif (userProperties.megaman_position !== undefined) {\n\t\tlet newPos = new Vec3(engine.canvasSize.x * userProperties.megaman_position, thisLayer.origin.y, thisLayer.origin.z);\n\n\t\tfor (let layer of allLayers) {\n\t\t\tlayer.origin = newPos;\n\t\t}\n\t}\n\tif (userProperties.show_megaman !== undefined) {\n\t\thideAll = !userProperties.show_megaman;\n\t}\n\n\tfor (let layer of allLayers) {\n\t\tlayer.scale = new Vec3(0);\n\t}\n\tif (!hideAll) {\n\t\tswitch (currentHelmet) {\n\t\t\tcase `none`:\n\t\t\tdefault:\n\t\t\t\tthisLayer.scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX1`:\n\t\t\t\tthisScene.getLayer(`MMX1HelmetRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX2`:\n\t\t\t\tthisScene.getLayer(`MMX2HelmetRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX3`:\n\t\t\t\tthisScene.getLayer(`MMX3HelmetRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (currentArmor) {\n\t\t\tcase `none`:\n\t\t\tdefault:\n\t\t\t\tthisLayer.scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX1`:\n\t\t\t\tthisScene.getLayer(`MMX1ArmorRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX2`:\n\t\t\t\tthisScene.getLayer(`MMX2ArmorRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX3`:\n\t\t\t\tthisScene.getLayer(`MMX3ArmorRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (currentArms) {\n\t\t\tcase `none`:\n\t\t\tdefault:\n\t\t\t\tthisLayer.scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX1`:\n\t\t\t\tthisScene.getLayer(`MMX1ArmsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX2`:\n\t\t\t\tthisScene.getLayer(`MMX2ArmsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX3`:\n\t\t\t\tthisScene.getLayer(`MMX3ArmsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t}\n\t\tswitch (currentBoots) {\n\t\t\tcase `none`:\n\t\t\tdefault:\n\t\t\t\tthisLayer.scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX1`:\n\t\t\t\tthisScene.getLayer(`MMX1BootsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX2`:\n\t\t\t\tthisScene.getLayer(`MMX2BootsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t\tcase `MMX3`:\n\t\t\t\tthisScene.getLayer(`MMX3BootsRun`).scale = new Vec3(1);\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n}",
				"value" : "256.000 131.000 0.000"
			},
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 28,
			"image" : "models/MMX1HelmetRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX1HelmetRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 20,
			"image" : "models/MMX2HelmetRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX2HelmetRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 345,
			"image" : "models/MMX3HelmetRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX3HelmetRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 236,
			"image" : "models/MMX1ArmorRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX1ArmorRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 326,
			"image" : "models/MMX2ArmorRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX2ArmorRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 359,
			"image" : "models/MMX3ArmorRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX3ArmorRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 3551,
			"image" : "models/MMX1ArmsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX1ArmsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 330,
			"image" : "models/MMX2ArmsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX2ArmsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 372,
			"image" : "models/MMX3ArmsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX3ArmsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 24,
			"image" : "models/MMX1BootsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX1BootsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 339,
			"image" : "models/MMX2BootsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX2BootsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"id" : 377,
			"image" : "models/MMX3BootsRun.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "MMX3BootsRun",
			"origin" : "256.000 131.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "40.000 36.000",
			"solid" : true,
			"visible" : true
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/scroll/effect.json",
					"id" : 547,
					"name" : "Scroll mask",
					"passes" : 
					[
						{
							"constantshadervalues" : 
							{
								"repeat" : "1 1",
								"speedx" : 
								{
									"user" : "fg_speed",
									"value" : 0.375
								},
								"speedy" : 0
							}
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend/effect.json",
					"id" : 480,
					"name" : "Insert Background (Blend)",
					"passes" : 
					[
						{
							"combos" : 
							{
								"WRITEALPHA" : 0
							},
							"textures" : [ null, "util/white" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/transform/effect.json",
					"id" : 155,
					"name" : "Sharpen Pixels (Null Transform)",
					"passes" : [ {} ],
					"visible" : true
				}
			],
			"id" : 478,
			"image" : "models/Foreground Mask.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Foreground Mask (Unused)",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "512.000 256.000",
			"solid" : true,
			"visible" : false
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"config" : 
			{
				"passthrough" : true
			},
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/transform/effect.json",
					"id" : 125,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"MODE" : 0
							}
						}
					],
					"visible" : true
				}
			],
			"id" : 123,
			"image" : "models/util/composelayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Final Scene capture (Compose) (Unused)",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "512.000 256.000",
			"solid" : true,
			"visible" : false
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"angles" : "0.000 0.000 0.000",
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"dependencies" : [ 123 ],
			"effects" : 
			[
				{
					"file" : "effects/blend/effect.json",
					"id" : 142,
					"name" : "Get Final Scene capture",
					"passes" : 
					[
						{
							"textures" : [ null, "_rt_imageLayerComposite_123_a" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/transform/effect.json",
					"id" : 150,
					"name" : "Sharpen Pixels (Null Transform)",
					"passes" : 
					[
						{
							"combos" : 
							{
								"CLAMP" : 1,
								"MODE" : 0
							},
							"constantshadervalues" : 
							{
								"angle" : 0.0,
								"offset" : "0 0",
								"scale" : "1 1"
							}
						}
					],
					"visible" : true
				}
			],
			"id" : 140,
			"image" : "models/512x256 White.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "Pixel step (512x256 White) (Unused)",
			"origin" : "256.000 128.000 0.000",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"scale" : "1.000 1.000 1.000",
			"size" : "512.000 256.000",
			"solid" : true,
			"visible" : 
			{
				"user" : "low_precision_pixels",
				"value" : false
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/blend_scaled/effect.json",
					"id" : 836,
					"name" : "Screen Pixels",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 11,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"center" : "0 0",
								"multiply" : 
								{
									"user" : "crt_effect",
									"value" : 1
								},
								"scale" : 
								{
									"script" : "'use strict';\n\nlet scale = 0.2;\n\n/**\n * @param {Vec2} value (for property 'scale')\n */\nexport function init(value) {\n\treturn engine.screenResolution.multiply(scale);\n}\n\n/**\n * @param {Vec2} size\n */\nexport function resizeScreen(size) {\n\tthisObject.scale = size.multiply(scale);\n}\n",
									"user" : null,
									"value" : "512 256"
								}
							},
							"textures" : [ null, "pixel" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 397,
					"name" : "CRT Glow (Lighten)",
					"passes" : 
					[
						{},
						{
							"combos" : 
							{
								"KERNEL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							}
						},
						{
							"combos" : 
							{
								"KERNEL" : 1,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							}
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 6,
								"COMPOSITE" : 1,
								"COMPOSITEMONO" : 0
							},
							"constantshadervalues" : 
							{
								"compositealpha" : 
								{
									"user" : "crt_effect",
									"value" : 1
								},
								"compositecolor" : "1 1 1",
								"compositeoffset" : "0 0"
							},
							"textures" : [ null, "util/white", "_rt_imageLayerComposite_362_b" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 625,
					"name" : "",
					"passes" : 
					[
						{},
						{
							"combos" : 
							{
								"KERNEL" : 2
							}
						},
						{
							"combos" : 
							{
								"KERNEL" : 2,
								"VERTICAL" : 1
							}
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 6,
								"COMPOSITE" : 1
							},
							"constantshadervalues" : 
							{
								"compositealpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.compositealpha = userProperties.crt_effect * 0.15;\n}\n",
									"value" : 0.14999999999999999
								},
								"compositeoffset" : "0 0"
							},
							"textures" : [ null, "util/white", "_rt_imageLayerComposite_362_a" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend/effect.json",
					"id" : 563,
					"name" : "Vignette (Blend)",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 2,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"multiply" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.multiply = userProperties.crt_effect * 0.5;\n}\n",
									"value" : 0.5
								}
							},
							"textures" : [ null, "Vignette" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/transform/effect.json",
					"id" : 446,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"CLAMP" : 1,
								"MODE" : 0
							},
							"constantshadervalues" : 
							{
								"angle" : 0,
								"offset" : "0 0",
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.scale = new Vec2(1.0 + userProperties.crt_effect * .05);\n}\n",
									"value" : "1.05 1.05"
								}
							}
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/fisheye/effect.json",
					"id" : 364,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BACKGROUND" : 1
							},
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"distortion" : 
								{
									"script" : "// Fisheye - Distortion\n'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.distortion = userProperties.crt_effect * .3;\n}\n",
									"value" : 0.30000001192092896
								},
								"size" : 
								{
									"script" : "// // Fisheye - Size\n// 'use strict';\n\n// /**\n//  * @param {Object} userProperties\n//  */\n// export function applyUserProperties(userProperties) {\n// \tif (userProperties.crt_effect !== undefined)\n// \t\tthisObject.size = 1.0 + userProperties.crt_effect * .5;\n// }\n",
									"value" : 1.5
								}
							}
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend_scaled/effect.json",
					"id" : 312,
					"name" : "CRT Screen Border",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"multiply" : 1.0,
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.scale = new Vec2(\n\t\t\t0.75 + userProperties.crt_effect * .225,\n\t\t\t0.7 + userProperties.crt_effect * .25\n\t\t);\n}\n",
									"value" : "1 1"
								}
							},
							"textures" : [ null, "CRT Border" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 362,
			"image" : "models/util/fullscreenlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "CRT v1 (Fullscreen)",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"solid" : true,
			"visible" : 
			{
				"user" : 
				{
					"condition" : "v1",
					"name" : "crt_type"
				},
				"value" : true
			}
		},
		{
			"alignment" : "center",
			"alpha" : 1.0,
			"color" : "1.000 1.000 1.000",
			"colorBlendMode" : 0,
			"copybackground" : true,
			"effects" : 
			[
				{
					"file" : "effects/blend_scaled/effect.json",
					"id" : 212,
					"name" : "Screen Pixels",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 2,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"center" : "0 0",
								"multiply" : 
								{
									"user" : "crt_effect",
									"value" : 1
								},
								"scale" : 
								{
									"script" : "'use strict';\n\n// let scale = new Vec2(0.125, 0.125);\n\nlet scale = new Vec2(0.0833333333333333, 0.125);\n\n/**\n * @param {Vec2} value (for property 'scale')\n */\nexport function init(value) {\n\treturn engine.screenResolution.multiply(scale);\n}\n\n/**\n * @param {Vec2} size\n */\nexport function resizeScreen(size) {\n\tthisObject.scale = size.multiply(scale);\n}\n\n// /**\n//  * @param {Object} userProperties\n//  */\n// export function applyUserProperties(userProperties) {\n// \t// if (userProperties.horizontal_pixel_scale !== undefined)\n// \t// \tscale = new Vec2(userProperties.horizontal_pixel_scale, scale.y);\n// \tif (userProperties.vertical_pixel_scale !== undefined)\n// \t\tscale = new Vec2(scale.x, userProperties.vertical_pixel_scale);\n// \tthisObject.scale = engine.screenResolution.multiply(scale);\n// }\n",
									"value" : "512 256"
								}
							},
							"textures" : [ null, "rgb_pixel" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 332,
					"name" : "CRT Glow (Linear Dodge)",
					"passes" : 
					[
						{},
						{
							"combos" : 
							{
								"KERNEL" : 2
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							}
						},
						{
							"combos" : 
							{
								"KERNEL" : 2,
								"VERTICAL" : 1
							},
							"constantshadervalues" : 
							{
								"scale" : "1 1"
							}
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 9,
								"COMPOSITE" : 1
							},
							"constantshadervalues" : 
							{
								"compositealpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.compositealpha = Math.pow(userProperties.crt_effect,2.5) * 3.25;\n}\n",
									"value" : 3
								},
								"compositeoffset" : "0 0"
							},
							"textures" : [ null, "util/white", "_rt_imageLayerComposite_207_b" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blur/effect.json",
					"id" : 368,
					"name" : "",
					"passes" : 
					[
						{},
						{
							"combos" : 
							{
								"KERNEL" : 2
							}
						},
						{
							"combos" : 
							{
								"KERNEL" : 2,
								"VERTICAL" : 1
							}
						},
						{
							"combos" : 
							{
								"BLENDMODE" : 6,
								"COMPOSITE" : 1
							},
							"constantshadervalues" : 
							{
								"compositealpha" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.compositealpha = userProperties.crt_effect * 0.2;\n}\n",
									"value" : 0.20000000298023224
								},
								"compositeoffset" : "0 0"
							},
							"textures" : [ null, "util/white", "_rt_imageLayerComposite_207_a" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend/effect.json",
					"id" : 257,
					"name" : "Vignette (Blend)",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 2,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"multiply" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.multiply = userProperties.crt_effect * 0.5;\n}\n",
									"value" : 0.5
								}
							},
							"textures" : [ null, "Vignette" ]
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/transform/effect.json",
					"id" : 268,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"CLAMP" : 1,
								"MODE" : 0
							},
							"constantshadervalues" : 
							{
								"angle" : 0,
								"offset" : "0 0",
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.scale = new Vec2(1.0 + userProperties.crt_effect * .05);\n}\n",
									"value" : "1.05 1.05"
								}
							}
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/fisheye/effect.json",
					"id" : 282,
					"name" : "",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BACKGROUND" : 1
							},
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"distortion" : 
								{
									"script" : "// Fisheye - Distortion\n'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.distortion = userProperties.crt_effect * .3;\n}\n",
									"value" : 0.30000001192092896
								},
								"size" : 
								{
									"script" : "// // Fisheye - Size\n// 'use strict';\n\n// /**\n//  * @param {Object} userProperties\n//  */\n// export function applyUserProperties(userProperties) {\n// \tif (userProperties.crt_effect !== undefined)\n// \t\tthisObject.size = 1.0 + userProperties.crt_effect * .5;\n// }\n",
									"value" : 1.5
								}
							}
						}
					],
					"visible" : true
				},
				{
					"file" : "effects/blend_scaled/effect.json",
					"id" : 294,
					"name" : "CRT Screen Border",
					"passes" : 
					[
						{
							"combos" : 
							{
								"BLENDMODE" : 0,
								"WRITEALPHA" : 0
							},
							"constantshadervalues" : 
							{
								"center" : "0.5 0.5",
								"multiply" : 1.0,
								"scale" : 
								{
									"script" : "'use strict';\n\n/**\n * @param {Object} userProperties\n */\nexport function applyUserProperties(userProperties) {\n\tif (userProperties.crt_effect !== undefined)\n\t\tthisObject.scale = new Vec2(\n\t\t\t0.75 + userProperties.crt_effect * .225,\n\t\t\t0.7 + userProperties.crt_effect * .25\n\t\t);\n}\n",
									"value" : "1 1"
								}
							},
							"textures" : [ null, "CRT Border" ]
						}
					],
					"visible" : true
				}
			],
			"id" : 207,
			"image" : "models/util/fullscreenlayer.json",
			"ledsource" : false,
			"locktransforms" : false,
			"name" : "CRT v2 (Fullscreen)",
			"parallaxDepth" : "1.000 1.000",
			"perspective" : false,
			"solid" : true,
			"visible" : 
			{
				"user" : 
				{
					"condition" : "v2",
					"name" : "crt_type"
				},
				"value" : false
			}
		}
	]
}